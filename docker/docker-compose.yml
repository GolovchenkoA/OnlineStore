version: '2.1'
services:
#  database:
#    image: postgres:latest
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_USER: "postgres"
#      POSTGRES_PASSWORD: "postgres"
#      POSTGRES_DB:       "ostock_dev"
#    volumes:
#      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
#      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
#    networks:
#      backend:
#        aliases:
#          - "database"
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
  configserver:
    image: online-store/configserver:0.0.2-SNAPSHOT
    ports:
      - "8071:8071"
#    environment:
#      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"
  productinfo:
    image: online-store/product-info:latest
    environment:
#      JAVA_OPTS doesn't work to provide system properties
#      JAVA_OPTS: "-Dspring.cloud.bootstrap.enabled=true"
#      It works because of https://github.com/spring-projects/spring-boot/wiki/Canonical-properties
      SPRING_CONFIG_IMPORT: "optional:configserver:http://configserver:8071"
      PROFILE: "dev"
#      CONFIGSERVER_URI: "http://configserver:8071"
#      CONFIGSERVER_URI: "http://localhost:8071"
#      CONFIGSERVER_PORT:   "8071"
#      DATABASESERVER_PORT: "5432"
#      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
#      database:
#        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend
    links:
      - configserver
    restart: on-failure

networks:
  backend:
    driver: bridge